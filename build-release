#!/bin/sh

set -e -u

unset POSIXLY_CORRECT

SCRIPT_NAME=$(basename $0)

error()
{
    echo "${SCRIPT_NAME}: $@"
    exit 1
}

if [ $(whoami) != "root" ]; then
    error "must be executed as root."
    exit 1
fi

_jobs="$(sysctl -n hw.ncpu)"

while getopts "j:" OPT; do
    case ${OPT} in
        j)
            _jobs="${OPTARG}"
            ;;
        *)
    esac
done

shift $((${OPTIND} - 1))

_jobs_option="-j${_jobs}"

_version=$1
_arch=$2

OS_SRCDIR=${BSDKIT_PATH}/src/${_version}/src
OS_RELDIR=${BSDKIT_PATH}/src/${_version}/release-${_arch}
OS_MAJOR=$(echo ${_version} | sed -e "s/\\..*//")

# ===

install -o root -g wheel -m 644 ansible/BSDKIT_${OS_MAJOR}.${_arch} ${OS_SRCDIR}/sys/${_arch}/conf/BSDKIT

echo ">>> Start of build: $(date "+%Y-%m-%d %H:%M:%S")"

make -C ${OS_SRCDIR}         __MAKE_CONF=/dev/null SRCCONF=/dev/null TARGET=${_arch} TARGET_ARCH=${_arch} KERNCONF="BSDKIT" ${_jobs_option} buildworld buildkernel
make -C ${OS_SRCDIR}/release __MAKE_CONF=/dev/null SRCCONF=/dev/null TARGET=${_arch} TARGET_ARCH=${_arch} KERNCONF="BSDKIT" release NOPORTS=yes

rm -r -f ${OS_RELDIR}
mkdir -p ${OS_RELDIR}

make -C ${OS_SRCDIR}/release __MAKE_CONF=/dev/null SRCCONF=/dev/null TARGET=${_arch} TARGET_ARCH=${_arch} KERNCONF="BSDKIT" install DESTDIR=${OS_RELDIR}
make -C ${OS_SRCDIR}/release __MAKE_CONF=/dev/null SRCCONF=/dev/null TARGET=${_arch} TARGET_ARCH=${_arch} KERNCONF="BSDKIT" clean

echo ">>> End of build: $(date "+%Y-%m-%d %H:%M:%S")"
