#!/bin/sh

# shellcheck disable=SC3043

set -e -u

error() {
    echo "bsdkit-rewrite-filesystem: $*"
    exit 1
}

rewrite_filesystem() {
    local _option

    local _source_filesystem

    while getopts "s:" _option; do
        case "${_option}" in
            s)
                _source_filesystem="${OPTARG}"
                ;;
            *)
                error "unrecognized option."
                ;;
        esac
    done

    [ -n "${_source_filesystem}" ] || error "_source_filesystem required."

    local _target_filesystem
    local _snapshot_name

    _snapshot_name=$(uuidgen | cut -d - -f 1)
    _target_filesystem=${_source_filesystem}.${_snapshot_name}

    zfs destroy -r "${_source_filesystem}"@"${_snapshot_name}" >/dev/null 2>&1 || :
    zfs snapshot -r "${_source_filesystem}"@"${_snapshot_name}"
    zfs send --verbose --replicate --props --large-block --embed "${_source_filesystem}"@"${_snapshot_name}" \
        | zfs receive -v -u -F "${_target_filesystem}"
    zfs destroy -r -f "${_source_filesystem}"@"${_snapshot_name}"
    zfs destroy -r -f "${_target_filesystem}"@"${_snapshot_name}"
    zfs destroy -r -f "${_source_filesystem}"
    zfs rename "${_target_filesystem}" "${_source_filesystem}"

    for _filesystem in $(zfs list -H -o name -t filesystem -r "${_source_filesystem}"); do
        # BD584E0F-28D6-4409-956D-F9B1468C2DD9
        zfs get -H -o property all "${_filesystem}" \
            | sort \
            | uniq \
            | xargs -n1 -J % echo zfs inherit -S % "${_filesystem}" \
            | sh -x
    done

    # 8E95F488-BE4B-48F6-9FEE-C58CBBFD25BC
    zfs get -s received -H -r all "${_source_filesystem}" \
        | awk '
$2 != "mountpoint" {
    print "zfs set " $2 "=" $3 " " $1;
 }

$2 == "mountpoint" {
    gsub("/altroot", "", $3);

    if ($3 == "") {
        $3 = "/";
    }

    print "zfs set " $2 "=" $3 " " $1
}' | sh -x
}

rewrite_filesystem "$@"
