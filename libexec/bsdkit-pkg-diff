#!/usr/bin/env zsh

setopt errreturn nounset pipefail

SCRIPT_PATH="$(dirname $(realpath $0))"
SCRIPT_NAME="$(basename $0)"

source ${SCRIPT_PATH}/../lib/system.inc.sh
source ${SCRIPT_PATH}/../lib/colors.inc.sh
source ${SCRIPT_PATH}/../lib/hr-to-bytes.inc.sh
source ${SCRIPT_PATH}/../lib/is-yes.inc.sh
source ${SCRIPT_PATH}/../lib/yaml.inc.sh

# if [ "$(uname -s)" != "FreeBSD" ]; then
#     error "Must be executed on FreeBSD."
#     exit 1
# fi

BSDKIT_PATH="$(realpath ${SCRIPT_PATH}/../)"

if [ -x /usr/local/bin/vim ]; then
    export EDITOR=/usr/local/bin/vim
fi

# ===========================================================================

SERVER1=""
SERVER2=""

# Usage information
function usage {
    echo "Usage: $0 [--help] --server1 server1 --server2 server2 [--all]"
    echo "  --help      Display this help message"
    echo "  --server1   Specify the first server"
    echo "  --server2   Specify the second server"
    echo "  --all       Query all packages (including automatic packages)"
}

# Parse command line options
zparseopts -D -E \
    h=help -help=help \
    -server1:=server1_opt \
    -server2:=server2_opt \
    -all=all_opt

if [[ -n "$help" ]]; then
    usage
    exit 0
fi

if [[ -n "$server1_opt" ]]; then
    SERVER1="${server1_opt[2]}"
fi

if [[ -n "$server2_opt" ]]; then
    SERVER2="${server2_opt[2]}"
fi

QUERY_ALL=0
if [[ -n "$all_opt" ]]; then
    QUERY_ALL=1
fi

# Check if both servers are specified
if [ -z "$SERVER1" ] || [ -z "$SERVER2" ]; then
    echo "Error: both servers must be specified." >&2
    usage
    exit 1
fi

# Temporary files for storing package lists
TMPFILE1=$(mktemp /tmp/pkglist1.XXXXXX)
TMPFILE2=$(mktemp /tmp/pkglist2.XXXXXX)

# Ensure temporary files are deleted on exit
trap 'rm -f "$TMPFILE1" "$TMPFILE2"' EXIT

# Fetch and sort package lists from both servers
if [[ $QUERY_ALL -eq 1 ]]; then
    # Query all packages
    ssh "$SERVER1" "pkg query '%o'" | sort > "$TMPFILE1"
    ssh "$SERVER2" "pkg query '%o'" | sort > "$TMPFILE2"
else
    # Query only non-automatic packages
    ssh "$SERVER1" "pkg query -e '%a == 0' '%o'" | sort > "$TMPFILE1"
    ssh "$SERVER2" "pkg query -e '%a == 0' '%o'" | sort > "$TMPFILE2"
fi

# Compare the package lists
echo "Comparing installed packages between $SERVER1 and $SERVER2:"
diff "$TMPFILE1" "$TMPFILE2"
