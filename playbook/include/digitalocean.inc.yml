- name: "digitalocean: gather metadata (#1)"
  shell:
    cmd: |
      set -e -u -o pipefail

      for _device in $(sysctl -n kern.disks); do
          if [ "$(fstyp /dev/${_device} 2> /dev/null)" = "cd9660" ]; then
              mount -t cd9660 /dev/${_device} /mnt
              if [ -f /mnt/digitalocean_meta_data.json ]; then
                  cat /mnt/digitalocean_meta_data.json
                  umount /mnt
                  exit 0
              else
                  umount /mnt
              fi
          fi
      done
      exit 1
  register: metadata_payload

- name: "digitalocean: gather metadata (#2)"
  set_fact:
    metadata: "{{ metadata_payload.stdout | from_json }}"

- name: "digitalocean: configure /etc/hosts for Digital Ocean"
  blockinfile:
    path: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: EOF
    block: |
      {{ metadata.interfaces.public[0].ipv4.ip_address }} {{ metadata.hostname.split(".")[0] }} {{ metadata.hostname }} egress
      {{ metadata.interfaces.public[0].anchor_ipv4.ip_address }} anchor
      {{ metadata.interfaces.private[0].ipv4.ip_address }} private

- name: "digitalocean: rc.conf"
  shell:
    cmd: |
      set -e -u -o pipefail

      sysrc ifconfig_vtnet0="inet {{ metadata.interfaces.public[0].ipv4.ip_address }} netmask {{ metadata.interfaces.public[0].ipv4.netmask }}"
      sysrc ifconfig_vtnet0_alias0="inet {{ metadata.interfaces.public[0].anchor_ipv4.ip_address }} netmask {{ metadata.interfaces.public[0].anchor_ipv4.netmask }}"
      sysrc ifconfig_vtnet1="inet {{ metadata.interfaces.private[0].ipv4.ip_address }} netmask {{ metadata.interfaces.private[0].ipv4.netmask }}"
      sysrc defaultrouter="{{ metadata.interfaces.public[0].ipv4.gateway }}"

      sysrc sshd_flags="$(echo $(sysrc -n sshd_flags | rs 0 1 | grep -v -- -oListenAddress))"
      sysrc sshd_flags+=" -oListenAddress={{ metadata.interfaces.public[0].ipv4.ip_address }}"
      sysrc sshd_flags+=" -oListenAddress={{ metadata.interfaces.public[0].anchor_ipv4.ip_address }}"
      sysrc sshd_flags+=" -oListenAddress={{ metadata.interfaces.private[0].ipv4.ip_address }}"

      sysrc hostname="{{ metadata.hostname.split(".")[0] }}"

      service sshd configtest
  changed_when: no
